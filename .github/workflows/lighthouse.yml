name: Lighthouse

on: pull_request

jobs:
  generate_lighthouse_audit:
    timeout-minutes: 30
    runs-on: ubuntu-latest

    steps:
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...
      - uses: actions/checkout@v1
      - name: Use Node.js 12.x
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 12.x
      - name: Waiting for 200 from Netlify
        uses: probablyup/wait-for-netlify-action@3.2.0
        id: waitForNetlifyDeploy
        with:
          site_id: ${{ secrets.NETLIFY_SITE_ID }} # See Settings > Site Details > General in the Netlify UI
        env:
          NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
      # - uses: actions/checkout@v2
      # - name: Audit preview URL with Lighthouse
      #   id: lighthouse_audit
      #   uses: treosh/lighthouse-ci-action@v3
      #   with:
      #     urls: |
      #       ${{ steps.waitForNetlifyDeploy.outputs.url }}
      #       ${{ steps.waitForNetlifyDeploy.outputs.url }}/maps-tool
      #       ${{ steps.waitForNetlifyDeploy.outputs.url }}/quick-maps
      #     uploadArtifacts: true
      #     temporaryPublicStorage: true
      - uses: actions/checkout@master
      - run: mkdir /tmp/artifacts
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
          author: ${{ github.actor }}
          branch: ${{ github.ref }}
          outputDirectory: /tmp/artifacts
          urls: "${{ steps.waitForNetlifyDeploy.outputs.url }},${{ steps.waitForNetlifyDeploy.outputs.url }}/maps-tool,${{ steps.waitForNetlifyDeploy.outputs.url }}/quick-maps"
          sha: ${{ github.sha }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2.3.0
        with:
          name: Lighthouse reports
          path: /tmp/artifacts
      # - name: Format lighthouse score
      #   id: format_lighthouse_score
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{secrets.MAPS_TOKEN_NOV20}}
      #     script: |
      #       const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
      #       const links = ${{ steps.lighthouse_audit.outputs.links }}
      #       const formatResult = (res) => Math.round((res * 100))
      #       Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
      #       const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
      #       const comment = [
      #           `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
      #           '| Category | Score |',
      #           '| --- | --- |',
      #           `| ${score(result.performance)} Performance | ${result.performance} |`,
      #           `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
      #           `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
      #           `| ${score(result.seo)} SEO | ${result.seo} |`,
      #           `| ${score(result.pwa)} PWA | ${result.pwa} |`,
      #           ' ',
      #           `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
      #       ].join('\n')
      #        core.setOutput("comment", comment);
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.MAPS_TOKEN_NOV20 }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            **The Lighthouse reports can be downloaded as Artifacts. See the CI stage**
